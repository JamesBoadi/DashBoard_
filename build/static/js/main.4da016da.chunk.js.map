{"version":3,"sources":["App.js","Components.js","MousePosition.js","OrderForm.js","Stocks.js","DropZoneOne.js","DropZoneTwo.js","StockChart.js","HistoryTable.js","Main.js","serviceWorker.js","index.js"],"names":["Component","Components","MousePosition","useState","x","y","pageX","pageY","mousePosition","setMousePosition","updateMousePosition","ev","el","target","offsetX","clientX","getBoundingClientRect","left","offsetY","clientY","top","useEffect","window","addEventListener","removeEventListener","OrderForm","props","React","useRef","observerState","state","setState","stock","stockPrice","stockChangePer","useDrag","item","type","id","_id","end","monitor","res","getDropResult","collect","connect","isDragging","drag","orderform","Box","class","ref","style","opacity","position","bg","bottom","boxShadow","height","width","rounded","borderWidth","transform","padding","min","max","step","value","size","right","margin","show","table","color","Stocks","textAlign","DropZoneOne","useDrop","accept","isOver","drop","fontWeight","DropZoneTwo","zIndex","StockChart","data","useMemo","label","axes","primary","lineChart","background","cursor","HistoryTable","Main","currentState","form","startedMoving","renderForm","bind","setPos","getPos","currPosX","currPosY","observe","sideNavLeft","pos","this","setForm","router","href","className","overflow","formState","chartState","chart","Boolean","location","hostname","match","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4da016da.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Tab, Tabs, Navbar, Nav, NavItem, NavDropdown, MenuItem } from 'react-bootstrap';\nimport './App.css';\n\nclass App extends Component {\n   constructor(props) {\n      super(props);\n\n      //    this.logout = this.logout.bind(this);\n      this.tradName = React.createRef();\n      this.historicalData = [8];\n      this.realTimeData = 0;\n\n      this.TICKINTERVAL = 120;// Changed to every 2 minutes\n      this.XAXISRANGE = 777600000;\n      var finalData = [8];\n      global.finalData = finalData;\n      this.currentDate = new Date();\n      this.navigate = this.navigate.bind(this);\n      this.time = this.currentDate.getDay() + \"/\" + this.currentDate.getMonth() + \"/\" +\n         this.currentDate.getFullYear()// + \"  \" + this.currentDate.getHours()+\":\"+this.currentDate.getSeconds()\n\n\n      this.state = {\n         stock: \"SNAP\",\n         homepage: false,\n         series: [\n            {\n               name: \"Graph\", // stock name\n               data: [250, 260, 261.2, 284.1]\n            }\n         ],\n         options: {\n            title: {\n               text: this.time,\n               align: 'center'\n            },\n\n            stroke: {\n               curve: 'smooth'\n            },\n            markers: {\n               size: 0\n            },\n\n            legend: {\n               show: false\n            }\n         }\n      };\n   }\n\n\n\n   navigate(event) {\n      //const node = ReactDOM.findDOMNode(e);\n\n      if (this.divElement) {\n         this.divElement.tab('show');\n         //this.setState({ value: this.divElement.getAttribute(\"data-value\") });\n      }\n\n      event.preventDefault();\n   }\n\n   render() {\n      // const timer = <h4>{this.state.time}</h4>;\n      const info = <h5>  {this.state.number} {this.state.prevTime}</h5>\n\n      return (\n         /*   <div class=\"form-check\" >\n                              <input type=\"checkbox\" class=\"form-check-input\" id=\"checkbox\" ></input>\n                              <label class=\"form-check-label\" for=\"exampleCheck1\">Hide password</label>\n                          </div>  timer,\n\n                     <nav>\n                        <div class=\"nav nav-tabs nav-fill\" id=\"nav-tab\" role=\"tablist\" >\n                           <a class=\"nav-item nav-link active\" id=\"nav-home-tab\"  data-toggle=\"tab\" href=\"#nav-home\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\" onClick={this.navigate}>Home</a>\n                           <a class=\"nav-item nav-link\" id=\"nav-profile-tab\" data-toggle=\"tab\"  href=\"#nav-profile\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\" onClick={this.navigate}>Profile</a>\n                        </div>\n                     </nav>\n\n  <div class=\"tab-content\" id=\"nav-tabContent\" >\n                        <div class=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\n  </div>\n\n                        <div class=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\n                          <p>Et et consecteturpor incididunt tempor dolor ipsn adipisicing reprehenderit. </p>\nhttps://stackoverflow.com/questions/9709125/how-do-i-stop-a-css-layout-from-distorting-when-zooming-in-out\n\nhttps://demos.creative-tim.com/light-bootstrap-dashboard-pro-react/?_ga=2.91585759.473493738.1601038548-1277754966.1601038548#/admin/buttons\n\n   */\n         <div className=\"App\">\n            <header className=\"App-header\">\n               <p class=\"logo\">My Mini Trader</p>\n               <div class=\"adjust\">\n                  <form class=\"mainForm\">\n\n                     <Tabs defaultActiveKey=\"profile\" class=\"nav nav-fill bg-secondary\" id=\"nav-tab\" >\n                        <Tab eventKey=\"home\" title=\"Login\" class=\"tab\">\n\n                           <div class=\"form-group\">\n                              <label class=\"text-email\">Email</label>\n                              <input type=\"text\" id=\"emailBox\" class=\"form-control\" aria-describedby=\"walletIDHelp\" placeholder=\"Enter your walletID here\"\n                              ></input>\n                           </div>\n\n                           <div class=\"form-group\">\n                              <label class=\"text-password\">Password</label>\n                              <input type=\"password\" id=\"passwordBox\" class=\"form-control\" placeholder=\"Enter your password here\"></input>\n                           </div>\n\n                           <div class=\"loginButton\">\n                              <button type=\"button\" class=\"btn btn-outline-secondary btn-block\" >Login</button>\n                           </div>\n                        </Tab>\n\n                        <Tab eventKey=\"profile\" title=\"Register\" class=\"tab\">\n                           \n                        <div class=\"form-group\">\n                              <label class=\"text-email\">Name </label>\n                              <input type=\"text\" id=\"emailBox\" class=\"form-control\" aria-describedby=\"walletIDHelp\" placeholder=\"Enter your walletID here\"\n                              ></input>\n                           </div>\n\n                           <div class=\"form-group\">\n                              <label class=\"text-password\">Email </label>\n                              <input type=\"password\" id=\"passwordBox\" class=\"form-control\" placeholder=\"Enter your password here\"></input>\n                           </div>\n\n                           <div class=\"form-group\">\n                              <label class=\"text-password\">Password</label>\n                              <input type=\"password\" id=\"passwordBox\" class=\"form-control\" placeholder=\"Enter your password here\"></input>\n                           </div>\n\n                           <div class=\"loginButton\">\n                              <button type=\"button\" class=\"btn btn-outline-secondary btn-block\" >Register</button>\n                           </div>\n                        </Tab>\n                     </Tabs>\n                  </form>\n\n               </div>\n               {info}\n            </header>\n         </div>\n      );\n   }\n}\n\nexport default App;\n","export const Components = { // Must be the same of the class name\r\n    CHART: 'chart',\r\n    ORDERFORM: 'orderform',\r\n    TABLE:'table'\r\n};","import { Component, useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\n export default function MousePosition() {\r\n    const [mousePosition, setMousePosition] = useState({ x: null, y: null, pageX: null, pageY: null});\r\n\r\n    const updateMousePosition = ev => {\r\n  \r\n        const el = ev.target;\r\n        let offsetX = ev.clientX - el.getBoundingClientRect().left;\r\n        let offsetY = ev.clientY - el.getBoundingClientRect().top;\r\n        \r\n        setMousePosition({ x: offsetX, y: offsetY, pageX: ev.pageX, pageY: ev.pageY });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"mousemove\", updateMousePosition);\r\n\r\n        return () => window.removeEventListener(\"mousemove\", updateMousePosition);\r\n    }, []);\r\n\r\n    return mousePosition;\r\n};\r\n\r\n/*\r\n}*/","import React, { Component, useState, createContext } from 'react';\r\nimport { useDrag } from \"react-dnd\";\r\nimport { Components } from './Components';\r\nimport MousePosition from './MousePosition';\r\nimport { Box } from '@chakra-ui/core';\r\nimport './App.css';\r\n\r\n// https://reacttraining.com/blog/using-hooks-in-classes/ // https://medium.com/@adebola.niran/how-to-create-multiple-refs-in-react-with-useref-5fa2bbef5d15 ask on stack overflow\r\n//  http://web.archive.org/web/20120101221030/http://blog.morrisjohns.com/javascript_closures_for_dummies.html7\r\n\r\nconst OrderForm = (props) => {\r\n\tlet pos = MousePosition();\r\n\tlet offsetX, offsetY;\r\n\tconst form = React.useRef();\r\n\r\n\tconst [state, setState] = useState({ observerState: false });\r\n\tconst [stock, setStock] = useState(\"GOOGL\");\r\n\tconst [stockPrice, setStockPrice] = useState(500); // We might need an interface for multiple state updates\r\n\tconst [stockChangePer, setStockChangePer] = useState(\"0.5%\");\r\n\r\n\tconst [{ isDragging }, drag] = useDrag({\r\n\t\titem: { // Define form\r\n\t\t\ttype: Components.ORDERFORM,\r\n\t\t\tid: props._id,\r\n\t\t},\r\n\r\n\t\tend: (item, monitor) => { // if page refreshes, we need to cache the sttate\r\n\t\t\tconst res = monitor.getDropResult();\r\n\t\t\tif (res && state)\r\n\t\t\t\tsetState(false)\r\n\t\t\telse if (res && !state)\r\n\t\t\t\tsetState(true)\r\n\t\t},\r\n\t\t// collect <- function, monitor, connect <- parameter\r\n\t\tcollect: (monitor, connect) => ({\r\n\t\t\t// properties to inject into component\r\n\t\t\tisDragging: !!monitor.isDragging(),\r\n\t\t}),\r\n\t});\r\n\r\n\r\n\t// Use a ref for references https://medium.com/swlh/react-dnd-in-examples-ce509b25839d\r\n\t// Call this funtion from Dropzone \t<input class=\"form-control\" class=\"multiplier\" id=\"multiplier\" aria-describedby=\"multiplier\" placeholder=\"Multiplier\"></input>\r\n\r\n\tconst orderformBg = <Box\r\n\t\tbg=\"#ebebeb\"\r\n\t\tstyle={{ position: \"absolute\", top: 0 }}\r\n\t\tboxShadow='sm'\r\n\t\ttextAlign='center'\r\n\t\theight='2rem'\r\n\t\twidth='100%'\r\n\t\trounded=\"lg\"\r\n\t\tborderWidth=\"1px\">\r\n\t</Box>\r\n\r\n\tconst placeOrderStyle = {\r\n\t\tposition: \"absolute\",\r\n\t\twidth: \"90%\",\r\n\t\tmargin: \"auto\",\r\n\t\tleft: 18,\r\n\t\ttransform: \"translate(0px, 350px)\"\r\n\t}\r\n\r\n\r\n\tlet orderform =  // pass as props to main (with dropzzones)\r\n\t\t<form class=\"mainForm\" id=\"border\" ref={drag} style={{\r\n\t\t\topacity: isDragging ? 0.5 : 1\r\n\t\t}} >\r\n\r\n\t\t\t<h3 style={{ position: \"absolute\", left: 10 }} >Stock: {stock}</h3>\r\n\t\t\t<h5 style={{ position: \"absolute\", left: 10, top: 45 }}>{stockPrice + \"   \" + stockChangePer}</h5>\r\n\r\n\t\t\t<Box\r\n\t\t\t\tbg=\"#D3D3D3\"\r\n\t\t\t\tstyle={{ position: \"absolute\", bottom: 150 }}\r\n\t\t\t\tboxShadow='sm'\r\n\t\t\t\theight='40%'\r\n\t\t\t\twidth='100%'\r\n\t\t\t\trounded=\"lg\"\r\n\t\t\t\tborderWidth=\"1px\">\r\n\r\n\t\t\t\t<div class=\"form-group\" style={{ position: \"fixed\" }, { transform: \"translate(0px, 6px)\" }}>\r\n\t\t\t\t\t<button style={{ padding: \"15px 50px\" }} type=\"submit\" class=\"buyButton\">Buy</button>\r\n\t\t\t\t\t<button style={{ padding: \"15px 50px\" }} type=\"submit\" class=\"sellButton\">Sell</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<p style={{ position: \"absolute\", left: 20, bottom: 65 }}>Size</p>\r\n\t\t\t\t<p style={{ position: \"absolute\", left: 20, bottom: 45 }}>GBP (£)</p>\r\n\r\n\t\t\t\t<input style={{ position: \"absolute\", left: 135, bottom: 74, padding: \"5px\" }} class=\"multiplier\" type=\"number\" min=\"0\" max=\"10\" step=\"2\" value=\"6\" size=\"6\"></input>\r\n\r\n\t\t\t\t<p style={{ position: \"absolute\", right: 80, bottom: 65 }}>Min</p>\r\n\t\t\t\t<p style={{ position: \"absolute\", right: 38, bottom: 45 }}>Contracts</p>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<button type=\"submit\" class=\"btn btn-success\" style={placeOrderStyle}>Place Order</button>\r\n\t\t</form>\r\n\r\n\r\n\treturn (\r\n\t\t<div class=\"trade\">\r\n\t\t\t{props.show(state, orderform)}\r\n\t\t</div>\r\n\t);\r\n\r\n};\r\n\r\nexport default OrderForm;\r\n","import React, { Component, useState, useContext } from 'react';\r\nimport { Box } from '@chakra-ui/core';\r\n\r\nconst table = <table style={{color: \"white;\"}}>\r\n    <tbody>\r\n    <tr>\r\n        <th>Stock</th>\r\n        <th>Date</th>\r\n        <th>Open</th>\r\n        <th>Low</th>\r\n        <th>High</th>\r\n        <th>Close</th>\r\n        <th>Volume</th>\r\n    </tr>\r\n    <tr>\r\n        <td>GOOGL</td>\r\n        <td>03-09-20 04:09PM</td>\r\n        <td>230</td>\r\n        <td>240</td>\r\n        <td>430</td>\r\n        <td>400</td>\r\n        <td>45679900</td>\r\n    </tr>\r\n    </tbody>\r\n</table>\r\n\r\n\r\nconst Stocks = props => {\r\n    return (\r\n        <Box\r\n            bg=\"rgb(60,60,60)\"\r\n            style={{position: \"absolute\", left: 900, top: 470}}\r\n            boxShadow='sm'\r\n            textAlign='center'\r\n            height='20rem'\r\n            width='25rem'\r\n            rounded=\"lg\"\r\n            borderWidth=\"1px\"\r\n            color='white'>\r\n            {table}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Stocks;","import React, { Component, useState, useContext } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport { Components } from './Components';\r\nimport MousePosition from './MousePosition';\r\nimport { Box } from '@chakra-ui/core';\r\nimport { OrderForm, CardContext } from './OrderForm';\r\nimport './App.css';\r\n\r\n\r\nconst DropZoneOne = props => {\r\n\tconst [zone, setZoneColor] = useState('blue');\r\n\tconst [event, setEv] = useState({ el: null, left: null, top: null });\r\n\r\n\tlet pos = MousePosition();\r\n\r\n\tconst [{ isOver }, drop] = useDrop({  // Get items from other class\r\n\t\taccept: Components.ORDERFORM,  // Add recongition for other forms\r\n\r\n\t\tcollect: (monitor) => ({\r\n\t\t\t// properties to inject into component\r\n\t\t\tisOver: !!monitor.isOver(),\r\n\t\t}),\r\n\t});\r\n\r\n\t\r\n\t// Drop Zone\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Box\r\n\t\t\t\tref={drop}\r\n\t\t\t\tboxShadow='sm'\r\n\t\t\t\tstyle={{position: \"absolute\", top: 0}}\r\n\t\t\t\tbg={isOver ? \"white\" : \"rgb(50,50,50)\"}\r\n\t\t\t\theight='28rem'\r\n\t\t\t\twidth='22rem'\r\n\t\t\t\tfontWeight=\"bold\"\r\n\t\t\t\tcolor='white.900'\r\n\t\t\t>\r\n\t\t\t\t{props.show()}\r\n\t\t\t</Box>\r\n\r\n\t\t</div>\r\n\r\n\t);\r\n\r\n\r\n};\r\n\r\nexport default DropZoneOne;\r\n","import React, { Component, useState, useContext } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport { Components } from './Components';\r\nimport MousePosition from './MousePosition';\r\nimport { Box } from '@chakra-ui/core';\r\nimport { OrderForm, CardContext } from './OrderForm';\r\nimport './App.css';\r\n\r\nconst DropZoneTwo = props => {\r\n\tconst [{ isOver }, drop] = useDrop({  \r\n\t\taccept: Components.ORDERFORM,\r\n\t\t\r\n\t\t//drop: (item, monitor) => markAsDone(item.id),\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisOver: !!monitor.isOver(),\r\n\t\t}),\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Box\r\n\t\t\t\tref={drop}\r\n\t\t\t\tstyle={{position: \"absolute\", top: 0, left:600, zIndex: -90}}\r\n\t\t\t\tboxShadow='sm'\r\n\t\t\t\tbg={isOver ? \"white\" : \"rgb(50,50,50)\"}\r\n\t\t\t\theight='28rem'\r\n\t\t\t\twidth='50rem'\r\n\t\t\t\tfontWeight=\"bold\"\r\n\t\t\t\tcolor='red.900'\r\n\t\t\t>\r\n\t\t\t\t{props.show()}\r\n\t\t\t</Box>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DropZoneTwo;\r\n","import React, { Component, useState, useContext } from 'react';\r\nimport { Components } from './Components';\r\nimport { useDrag } from \"react-dnd\";\r\nimport { Chart } from 'react-charts';\r\nimport './App.css';\r\n\r\nconst StockChart = (props) => {\r\n    const [state, setState] = useState({ observerState: false });\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { // Define form\r\n            type: Components.ORDERFORM,\r\n            id: props._id,\r\n        },\r\n\r\n        end: (item, monitor) => { // if page refreshes, we need to cache the sttate\r\n            const res = monitor.getDropResult();\r\n            if (res && state)\r\n                setState(false)\r\n            else if (res && !state)\r\n                setState(true)\r\n        },\r\n        // collect <- function, monitor, connect <- parameter\r\n        collect: (monitor, connect) => ({\r\n            // properties to inject into component\r\n            isDragging: !!monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    const data = React.useMemo(\r\n        () => [\r\n            {\r\n                label: 'Series 1',\r\n                data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\r\n            },\r\n            {\r\n                label: 'Series 2',\r\n                data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\r\n            }\r\n        ],\r\n        []\r\n    )\r\n\r\n    const axes = React.useMemo(\r\n        () => [\r\n            { primary: true, type: 'linear', position: 'bottom' },\r\n            { type: 'linear', position: 'left' }\r\n        ],\r\n        []\r\n    )\r\n\r\n    const lineChart = ( // Pass as props to main js\r\n        // A react-chart hyper-responsively and continuously fills the available\r\n        // space of its parent element automatically\r\n\r\n\r\n        <div\r\n            ref={drag}\r\n            style={{\r\n                width: '42rem',\r\n                height: '28rem',\r\n                background: 'rgba(60, 60, 60)',\r\n                opacity: isDragging ? 0.5 : 1,\r\n                cursor: 'pointer'\r\n            }}\r\n        >\r\n            <Chart data={data} axes={axes} />\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {props.show(state, lineChart)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StockChart;\r\n","import React, { Component, useState, useContext } from 'react';\r\nimport { Box } from '@chakra-ui/core';\r\n\r\nconst table = <table style={{color: \"white;\"}}>\r\n    <tbody>\r\n    <tr>\r\n        <th>Stock</th>\r\n        <th>Date</th>\r\n        <th>Position</th>\r\n        <th>Price</th>\r\n        <th>High</th>\r\n        <th>Close</th>\r\n        <th>Volume</th>\r\n    </tr>\r\n    <tr>\r\n        <td>GOOGL</td>\r\n        <td>03-09-20 04:09PM</td>\r\n        <td>230</td>\r\n        <td>240</td>\r\n        <td>430</td>\r\n        <td>400</td>\r\n        <td>45679900</td>\r\n    </tr>\r\n    </tbody>\r\n</table>\r\n\r\n\r\nconst HistoryTable = props => {\r\n    return (\r\n        <Box\r\n            bg=\"rgb(60,60,60)\"\r\n            style={{position: \"absolute\", top: 470}}\r\n            boxShadow='sm'\r\n            textAlign='center'\r\n            height='20rem'\r\n            width='52rem'\r\n            rounded=\"lg\"\r\n            borderWidth=\"1px\"\r\n            color='white'>\r\n            <h3>Active Orders</h3>\r\n            {table}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default HistoryTable;","import React, { Component } from 'react';\r\nimport { Button, Tab, Tabs, Navbar, Nav, NavItem, NavDropdown } from 'react-bootstrap';\r\nimport OrderForm from './OrderForm';\r\nimport Stocks from './Stocks';\r\nimport DropZoneOne from './DropZoneOne';\r\nimport DropZoneTwo from './DropZoneTwo';\r\nimport StockChart from './StockChart';\r\nimport { withRouter } from \"react-router\";\r\nimport HistoryTable from './HistoryTable';\r\nimport { Box } from '@chakra-ui/core';\r\n\r\nimport './App.css';\r\n\r\nclass Main extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n\r\n\r\n\r\n      this.currentState = null;\r\n      this.form = null;\r\n\r\n      this.startedMoving = false;\r\n      this.renderForm = this.renderForm.bind(this);\r\n\r\n      this.setPos = this.setPos.bind(this);\r\n      this.getPos = this.getPos.bind(this);\r\n\r\n\r\n      this.currPosX = null;\r\n      this.currPosY = null;\r\n\r\n      this.observe = { currPosX: this.currPosX, currPosY: this.currPosY };\r\n\r\n      this.state = {\r\n         isDragging: false,\r\n         sideNavLeft: false,\r\n         form: null\r\n\r\n\r\n      };\r\n   }\r\n\r\n\r\n   //     https://stackoverflow.com/questions/55227106/css-animation-text-sliding-left-to-right\r\n\r\n   /*\r\n      sidenavToggle = sidenavId => () => {\r\n         const sidenavNr = `sideNav${sidenavId}`\r\n         this.setState({\r\n            [sidenavNr]: !this.state[sidenavNr]\r\n         });\r\n      }; \r\n      show={() => (state && form)}> (dropzoneOne(state, form), (dropzoneTwo(state, form)))\r\n,\r\n                                 <DropZoneTwo show={() => !state && form}> </DropZoneTwo>\r\n\r\n                                \r\n\r\n      */\r\n\r\n\r\n   setPos(pos) // Called in trade class\r\n   {\r\n      this.position = pos;\r\n   }\r\n\r\n   getPos(pos) {\r\n      return this.position;\r\n   }\r\n\r\n\r\n\r\n   renderForm(state, form) {\r\n\r\n      this.setForm(form);\r\n\r\n      this.currentState = state;\r\n      this.form = form;\r\n   }\r\n\r\n\r\n   render() {\r\n      const router =\r\n\r\n         <div class=\"wrapper\">\r\n            <div class=\"sidenav\">\r\n               <a href=\"#\">Account</a>\r\n               <a href=\"#\">Order History</a>\r\n               <a href=\"#\">About</a>\r\n            </div>\r\n         </div>\r\n\r\n\r\n      return (\r\n         <div className=\"App\">\r\n            <div class=\"container\">\r\n               <div class=\"row\">\r\n\r\n                  {router}\r\n                  <header className=\"App-header\">\r\n                     <h2 style={{ position: \"relative\", top: 0, left: 0, color: \"white\" }}>My DashBoard</h2>\r\n\r\n                     <Box\r\n                        bg=\"rgb(60,60,60)\"\r\n                        style={{ position: \"relative\", top: 30, left: 15 }}\r\n                        boxShadow='sm'\r\n                        textAlign='center'\r\n                        height='2rem'\r\n                        width='81.5rem'\r\n                        rounded=\"lg\"\r\n                        borderWidth=\"1px\">\r\n\r\n                        <div style={{ color: \"white\"}}>\r\n                           <h4 style={{ position: \"absolute\", left: 0}}>AAPL (Apple) $48</h4>\r\n                           <h4 style={{ position: \"absolute\", left: 260}}>AAPL (Apple) $48</h4>\r\n                           <h4 style={{ position: \"absolute\", left: 520}}>AAPL (Apple) $48</h4>\r\n                           <h4 style={{ position: \"absolute\", left: 780}}>AAPL (Apple) $48</h4>\r\n                           <h4 style={{ position: \"absolute\", left: 1040}}>AAPL (Apple) $48</h4>\r\n                           </div>\r\n                     </Box>\r\n\r\n                     <div style={{ position: \"relative\", top: 120, overflow: \"visible\" }}>\r\n                        <div class=\"col\">\r\n                           <div class=\"trade\">\r\n                              <OrderForm show={(formState, form) =>\r\n                                 <StockChart show={(chartState, chart) =>\r\n\r\n                                    <div>\r\n                                       <DropZoneOne show={() => ((chartState && chart) || (!formState && form))}> </DropZoneOne>\r\n                                       <DropZoneTwo show={() => ((formState && form) || (!chartState && chart))}> </DropZoneTwo>\r\n                                    </div>\r\n\r\n                                 }\r\n                                 >\r\n                                 </StockChart>\r\n                              }> </OrderForm>\r\n                           </div>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                           <div class=\"stock\">\r\n                              <Stocks></Stocks>\r\n                           </div>\r\n                           <div class=\"history\">\r\n                              <HistoryTable></HistoryTable>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n\r\n                  </header>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Main from './Main';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from \"react-dnd\";\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DndProvider backend={HTML5Backend}>\n      <Main />\n    </DndProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}