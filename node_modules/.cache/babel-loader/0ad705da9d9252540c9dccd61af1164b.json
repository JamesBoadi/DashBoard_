{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peek\\\\OneDrive\\\\Documents\\\\TheDashBoard\\\\DashBoardOne\\\\src\\\\StockChart.js\";\nimport React, { Component, useState, useContext } from 'react';\nimport { Components } from './Components';\nimport { useDrag } from \"react-dnd\";\nimport { Chart } from 'react-charts';\nimport './App.css';\n\nconst StockChart = props => {\n  const [state, setState] = useState({\n    observerState: false\n  });\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      // Define form\n      type: Components.ORDERFORM,\n      id: props._id\n    },\n    end: (item, monitor) => {\n      // if page refreshes, we need to cache the sttate\n      const res = monitor.getDropResult();\n      if (res && state) setState(false);else if (res && !state) setState(true);\n    },\n    // collect <- function, monitor, connect <- parameter\n    collect: (monitor, connect) => ({\n      // properties to inject into component\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  const data = React.useMemo(() => [{\n    label: 'Series 1',\n    data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n  }, {\n    label: 'Series 2',\n    data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n  }], []);\n  const axes = React.useMemo(() => [{\n    primary: true,\n    type: 'linear',\n    position: 'bottom'\n  }, {\n    type: 'linear',\n    position: 'left'\n  }], []);\n  const lineChart =\n  /*#__PURE__*/\n  // Pass as props to main js\n  // A react-chart hyper-responsively and continuously fills the available\n  // space of its parent element automatically\n  React.createElement(\"div\", {\n    ref: drag,\n    style: {\n      width: '42rem',\n      height: '28rem',\n      background: 'rgba(60, 60, 60)',\n      opacity: isDragging ? 0.5 : 1,\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    data: data,\n    axes: axes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, props.show(state, lineChart));\n};\n\nexport default StockChart;","map":{"version":3,"sources":["C:/Users/Peek/OneDrive/Documents/TheDashBoard/DashBoardOne/src/StockChart.js"],"names":["React","Component","useState","useContext","Components","useDrag","Chart","StockChart","props","state","setState","observerState","isDragging","drag","item","type","ORDERFORM","id","_id","end","monitor","res","getDropResult","collect","connect","data","useMemo","label","axes","primary","position","lineChart","width","height","background","opacity","cursor","show"],"mappings":"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","sourcesContent":["import React, { Component, useState, useContext } from 'react';\r\nimport { Components } from './Components';\r\nimport { useDrag } from \"react-dnd\";\r\nimport { Chart } from 'react-charts';\r\nimport './App.css';\r\n\r\nconst StockChart = (props) => {\r\n    const [state, setState] = useState({ observerState: false });\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { // Define form\r\n            type: Components.ORDERFORM,\r\n            id: props._id,\r\n        },\r\n\r\n        end: (item, monitor) => { // if page refreshes, we need to cache the sttate\r\n            const res = monitor.getDropResult();\r\n            if (res && state)\r\n                setState(false)\r\n            else if (res && !state)\r\n                setState(true)\r\n        },\r\n        // collect <- function, monitor, connect <- parameter\r\n        collect: (monitor, connect) => ({\r\n            // properties to inject into component\r\n            isDragging: !!monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    const data = React.useMemo(\r\n        () => [\r\n            {\r\n                label: 'Series 1',\r\n                data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\r\n            },\r\n            {\r\n                label: 'Series 2',\r\n                data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\r\n            }\r\n        ],\r\n        []\r\n    )\r\n\r\n    const axes = React.useMemo(\r\n        () => [\r\n            { primary: true, type: 'linear', position: 'bottom' },\r\n            { type: 'linear', position: 'left' }\r\n        ],\r\n        []\r\n    )\r\n\r\n    const lineChart = ( // Pass as props to main js\r\n        // A react-chart hyper-responsively and continuously fills the available\r\n        // space of its parent element automatically\r\n\r\n\r\n        <div\r\n            ref={drag}\r\n            style={{\r\n                width: '42rem',\r\n                height: '28rem',\r\n                background: 'rgba(60, 60, 60)',\r\n                opacity: isDragging ? 0.5 : 1,\r\n                cursor: 'pointer'\r\n            }}\r\n        >\r\n            <Chart data={data} axes={axes} />\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {props.show(state, lineChart)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StockChart;\r\n"]},"metadata":{},"sourceType":"module"}